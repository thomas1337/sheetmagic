grammar com.coffeestorm.dsl.sheetmagic.Sheetmagic with org.eclipse.xtext.common.Terminals

import "http://www.eclipse.org/emf/2002/Ecore" as ecore

generate sheetmagic "http://www.coffeestorm.com/dsl/sheetmagic/Sheetmagic"

Model:
	'name' name=ID
	GeneratorOptions?
	sheets+=Sheet+
	(
		parameters+=Parameter |
		areas+=Area |
		areaMappings+=AreaMapping |
		paramterMappings+=ParamterMapping
	)*
;

AreaMapping:
	'map' 'area' name=ID 'to' '(' startRow=INT ',' startCol=ColumnIdx ',' numRows=INT ',' numCols=INT ')' 'in' sheet=[Sheet]
;	

ParamterMapping:
	'map' 'parameter' name=ID 'as' type=Type (required?='required')? 'to' to=STRING 'in' sheet=[Sheet]
;

Area:
	'area' name=ID (required?='required')? 
;

Sheet:
	'sheet' name=ID ('alias' alias=STRING)?
;

fragment GeneratorOptions:
	'options' '{' 
		createExecutionState?='createExecutionState'
		createAccessors?='createAccessors'
	'}'
;

Parameter:
	'parameter' name=ID ':' type=Type (required?='required')? 
;

Type:
	IntType | StringType | BooleanType | FloatType
;

IntType:
	'int'
;

FloatType:
	'float'
;

StringType:
	'string'
;

BooleanType:
	'boolean' 
;

ColumnIdx returns ecore::EString: 
	INT | ID
;
